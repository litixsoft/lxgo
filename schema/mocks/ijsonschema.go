// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/litixsoft/lxgo/schema (interfaces: IJSONSchema)

// Package lxSchemaMocks is a generated GoMock package.
package lxSchemaMocks

import (
	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo"
	schema "github.com/litixsoft/lxgo/schema"
	gojsonschema "github.com/xeipuuv/gojsonschema"
	reflect "reflect"
)

// MockIJSONSchema is a mock of IJSONSchema interface
type MockIJSONSchema struct {
	ctrl     *gomock.Controller
	recorder *MockIJSONSchemaMockRecorder
}

// MockIJSONSchemaMockRecorder is the mock recorder for MockIJSONSchema
type MockIJSONSchemaMockRecorder struct {
	mock *MockIJSONSchema
}

// NewMockIJSONSchema creates a new mock instance
func NewMockIJSONSchema(ctrl *gomock.Controller) *MockIJSONSchema {
	mock := &MockIJSONSchema{ctrl: ctrl}
	mock.recorder = &MockIJSONSchemaMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIJSONSchema) EXPECT() *MockIJSONSchemaMockRecorder {
	return m.recorder
}

// HasSchema mocks base method
func (m *MockIJSONSchema) HasSchema(arg0 string) bool {
	ret := m.ctrl.Call(m, "HasSchema", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// HasSchema indicates an expected call of HasSchema
func (mr *MockIJSONSchemaMockRecorder) HasSchema(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasSchema", reflect.TypeOf((*MockIJSONSchema)(nil).HasSchema), arg0)
}

// LoadSchema mocks base method
func (m *MockIJSONSchema) LoadSchema(arg0 string) (gojsonschema.JSONLoader, error) {
	ret := m.ctrl.Call(m, "LoadSchema", arg0)
	ret0, _ := ret[0].(gojsonschema.JSONLoader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadSchema indicates an expected call of LoadSchema
func (mr *MockIJSONSchemaMockRecorder) LoadSchema(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadSchema", reflect.TypeOf((*MockIJSONSchema)(nil).LoadSchema), arg0)
}

// SetSchemaRootDirectory mocks base method
func (m *MockIJSONSchema) SetSchemaRootDirectory(arg0 string) error {
	ret := m.ctrl.Call(m, "SetSchemaRootDirectory", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetSchemaRootDirectory indicates an expected call of SetSchemaRootDirectory
func (mr *MockIJSONSchemaMockRecorder) SetSchemaRootDirectory(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSchemaRootDirectory", reflect.TypeOf((*MockIJSONSchema)(nil).SetSchemaRootDirectory), arg0)
}

// ValidateBind mocks base method
func (m *MockIJSONSchema) ValidateBind(arg0 string, arg1 echo.Context, arg2 interface{}) (*schema.JSONValidationResult, error) {
	ret := m.ctrl.Call(m, "ValidateBind", arg0, arg1, arg2)
	ret0, _ := ret[0].(*schema.JSONValidationResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateBind indicates an expected call of ValidateBind
func (mr *MockIJSONSchemaMockRecorder) ValidateBind(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateBind", reflect.TypeOf((*MockIJSONSchema)(nil).ValidateBind), arg0, arg1, arg2)
}
