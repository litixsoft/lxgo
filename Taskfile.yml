version: '2'
vars:
  GOLANG_VERSION: '1.13'
  MONGO_VERSION: '4.0'
  SERVICE: 'lxgo'
  COMPOSE_TEST: 'compose.test.yaml'
  VERSION: {sh: git describe --tags}

tasks:
  test:
    cmds:
      - go test -cover ./...

  test-docker:
    cmds:
      - docker-compose -f {{.COMPOSE_TEST}} down
      - docker-compose -f {{.COMPOSE_TEST}} build
      - docker-compose -f {{.COMPOSE_TEST}} run {{.SERVICE}}
      - docker-compose -f {{.COMPOSE_TEST}} down
    env:
      GOLANG_VERSION: "{{.GOLANG_VERSION}}"
      MONGO_VERSION: "{{.MONGO_VERSION}}"

  ## show version
  version:
    cmds:
      - echo {{.VERSION}}

  ## set new patch version (example: actual 0.2.1 after 0.2.2)
  patch:
    cmds:
      - gitsem -m "Upgrade patch version to %s" patch

  ## set new minor version (example: actual 0.2.1 after 0.3.0)
  minor:
    cmds:
      - gitsem -m "Upgrade minor version to %s" minor

  ## set new minor version (example: actual 0.2.1 after 0.3.0)
  major:
    cmds:
      - gitsem -m "Upgrade major version to %s" major

  mocks:
    cmds:
      - mkdir -p audit/mocks
      - mockgen -destination=audit/mocks/iaudit.go -package=lxAuditMocks github.com/litixsoft/lxgo/audit IAudit
      - mkdir -p crypt/mocks
      - mockgen -destination=crypt/mocks/icrypt.go -package=lxCryptMocks github.com/litixsoft/lxgo/crypt ICrypt
      - mkdir -p db/mocks
      - mockgen -destination=db/mocks/ibaserepo.go -package=lxDbMocks github.com/litixsoft/lxgo/db IBaseRepo
      - mockgen -destination=db/mocks/ibaserepoaudit.go -package=lxDbMocks github.com/litixsoft/lxgo/db IBaseRepoAudit
      - mkdir -p schema/mocks
      - mockgen -destination=schema/mocks/ijsonschema.go -package=lxSchemaMocks github.com/litixsoft/lxgo/schema IJSONSchema
      - mkdir -p webhooks/mocks
      - mockgen -destination=webhooks/mocks/iwebhook.go -package=lxWebhooksMocks github.com/litixsoft/lxgo/webhooks IWebhook
