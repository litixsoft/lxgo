version: '2'
vars:
  GOLANG_VERSION: '1.15'
  MONGO_VERSION: '4.2'
  SERVICE: 'lxgo'
  COMPOSE_TEST: 'docker-compose.test.yaml'
  VERSION: {sh: git describe --tags}

tasks:
  ## update depends
  update:
    cmds:
      - go get -u ./...
      - go mod tidy
      - go mod vendor
  test:
    cmds:
      - go test -cover ./...

  test-docker:
    cmds:
      - docker-compose -f {{.COMPOSE_TEST}} down
      - docker-compose -f {{.COMPOSE_TEST}} build
      - docker-compose -f {{.COMPOSE_TEST}} run {{.SERVICE}}
      - docker-compose -f {{.COMPOSE_TEST}} down
    env:
      GOLANG_VERSION: "{{.GOLANG_VERSION}}"
      MONGO_VERSION: "{{.MONGO_VERSION}}"

  ## show version
  version:
    cmds:
      - echo {{.VERSION}}

  ## set new patch version (example: actual 0.2.1 after 0.2.2)
  patch:
    cmds:
      - gitsem -m "Upgrade patch version to %s" patch

  ## set new minor version (example: actual 0.2.1 after 0.3.0)
  minor:
    cmds:
      - gitsem -m "Upgrade minor version to %s" minor

  ## set new minor version (example: actual 0.2.1 after 0.3.0)
  major:
    cmds:
      - gitsem -m "Upgrade major version to %s" major

  mocks:
    cmds:
      - mkdir -p audit/mocks
      - mockgen -source=audit/audit.go -destination=audit/mocks/iaudit.go -package=lxAuditMocks
      - mkdir -p crypt/mocks
      - mockgen -source=crypt/crypt.go -destination=crypt/mocks/icrypt.go -package=lxCryptMocks
      - mkdir -p db/mocks
      - mockgen -source=db/db.go -destination=db/mocks/ibaserepo.go -package=lxDbMocks
      - mkdir -p schema/mocks
      - mockgen -source=schema/schema.go -destination=schema/mocks/ijsonschema.go -package=lxSchemaMocks
      - mkdir -p webhooks/mocks
      - mockgen -source=webhooks/webhook.go -destination=webhooks/mocks/iwebhook.go -package=lxWebhooksMocks
