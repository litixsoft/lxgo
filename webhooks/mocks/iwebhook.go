// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/litixsoft/lxgo/webhooks (interfaces: IWebhook)

// Package lxWebhooksMocks is a generated GoMock package.
package lxWebhooksMocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIWebhook is a mock of IWebhook interface
type MockIWebhook struct {
	ctrl     *gomock.Controller
	recorder *MockIWebhookMockRecorder
}

// MockIWebhookMockRecorder is the mock recorder for MockIWebhook
type MockIWebhookMockRecorder struct {
	mock *MockIWebhook
}

// NewMockIWebhook creates a new mock instance
func NewMockIWebhook(ctrl *gomock.Controller) *MockIWebhook {
	mock := &MockIWebhook{ctrl: ctrl}
	mock.recorder = &MockIWebhookMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIWebhook) EXPECT() *MockIWebhookMockRecorder {
	return m.recorder
}

// SendSmall mocks base method
func (m *MockIWebhook) SendSmall(arg0, arg1, arg2 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendSmall", arg0, arg1, arg2)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendSmall indicates an expected call of SendSmall
func (mr *MockIWebhookMockRecorder) SendSmall(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendSmall", reflect.TypeOf((*MockIWebhook)(nil).SendSmall), arg0, arg1, arg2)
}
