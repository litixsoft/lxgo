// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/litixsoft/lxgo/db (interfaces: IBaseRepoAudit)

// Package lxDbMocks is a generated GoMock package.
package lxDbMocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockIBaseRepoAudit is a mock of IBaseRepoAudit interface
type MockIBaseRepoAudit struct {
	ctrl     *gomock.Controller
	recorder *MockIBaseRepoAuditMockRecorder
}

// MockIBaseRepoAuditMockRecorder is the mock recorder for MockIBaseRepoAudit
type MockIBaseRepoAuditMockRecorder struct {
	mock *MockIBaseRepoAudit
}

// NewMockIBaseRepoAudit creates a new mock instance
func NewMockIBaseRepoAudit(ctrl *gomock.Controller) *MockIBaseRepoAudit {
	mock := &MockIBaseRepoAudit{ctrl: ctrl}
	mock.recorder = &MockIBaseRepoAuditMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIBaseRepoAudit) EXPECT() *MockIBaseRepoAuditMockRecorder {
	return m.recorder
}

// LogEntries mocks base method
func (m *MockIBaseRepoAudit) LogEntries(arg0 []interface{}, arg1 ...time.Duration) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "LogEntries", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// LogEntries indicates an expected call of LogEntries
func (mr *MockIBaseRepoAuditMockRecorder) LogEntries(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LogEntries", reflect.TypeOf((*MockIBaseRepoAudit)(nil).LogEntries), varargs...)
}

// LogEntry mocks base method
func (m *MockIBaseRepoAudit) LogEntry(arg0 string, arg1, arg2 interface{}, arg3 ...time.Duration) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "LogEntry", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// LogEntry indicates an expected call of LogEntry
func (mr *MockIBaseRepoAuditMockRecorder) LogEntry(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LogEntry", reflect.TypeOf((*MockIBaseRepoAudit)(nil).LogEntry), varargs...)
}
