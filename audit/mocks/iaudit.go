// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/litixsoft/lxgo/audit (interfaces: IAudit)

// Package lxAuditMocks is a generated GoMock package.
package lxAuditMocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIAudit is a mock of IAudit interface
type MockIAudit struct {
	ctrl     *gomock.Controller
	recorder *MockIAuditMockRecorder
}

// MockIAuditMockRecorder is the mock recorder for MockIAudit
type MockIAuditMockRecorder struct {
	mock *MockIAudit
}

// NewMockIAudit creates a new mock instance
func NewMockIAudit(ctrl *gomock.Controller) *MockIAudit {
	mock := &MockIAudit{ctrl: ctrl}
	mock.recorder = &MockIAuditMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIAudit) EXPECT() *MockIAuditMockRecorder {
	return m.recorder
}

// Log mocks base method
func (m *MockIAudit) Log(arg0 int, arg1, arg2, arg3 interface{}) chan bool {
	ret := m.ctrl.Call(m, "Log", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(chan bool)
	return ret0
}

// Log indicates an expected call of Log
func (mr *MockIAuditMockRecorder) Log(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Log", reflect.TypeOf((*MockIAudit)(nil).Log), arg0, arg1, arg2, arg3)
}

// SetupAudit mocks base method
func (m *MockIAudit) SetupAudit() error {
	ret := m.ctrl.Call(m, "SetupAudit")
	ret0, _ := ret[0].(error)
	return ret0
}

// SetupAudit indicates an expected call of SetupAudit
func (mr *MockIAuditMockRecorder) SetupAudit() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetupAudit", reflect.TypeOf((*MockIAudit)(nil).SetupAudit))
}
